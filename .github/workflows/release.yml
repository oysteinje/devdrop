name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Run 'go fmt ./...'"
          gofmt -s -l .
          exit 1
        fi

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: version
      run: |
        # Use commit hash as version for now, you can modify this to use git tags
        VERSION=$(git rev-parse --short HEAD)
        echo "version=v0.1.0-${VERSION}" >> $GITHUB_OUTPUT
        echo "Version: v0.1.0-${VERSION}"

    - name: Build binaries
      run: |
        VERSION=${{ steps.version.outputs.version }}

        # Linux amd64
        GOOS=linux GOARCH=amd64 go build -ldflags "-X github.com/oysteinje/devdrop/internal/version.Version=${VERSION}" -o devdrop-linux-amd64 ./cmd/devdrop

        # Linux arm64
        GOOS=linux GOARCH=arm64 go build -ldflags "-X github.com/oysteinje/devdrop/internal/version.Version=${VERSION}" -o devdrop-linux-arm64 ./cmd/devdrop

        # macOS amd64
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X github.com/oysteinje/devdrop/internal/version.Version=${VERSION}" -o devdrop-darwin-amd64 ./cmd/devdrop

        # macOS arm64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X github.com/oysteinje/devdrop/internal/version.Version=${VERSION}" -o devdrop-darwin-arm64 ./cmd/devdrop

        # Windows amd64
        GOOS=windows GOARCH=amd64 go build -ldflags "-X github.com/oysteinje/devdrop/internal/version.Version=${VERSION}" -o devdrop-windows-amd64.exe ./cmd/devdrop

        # Create checksums
        sha256sum devdrop-* > checksums.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: DevDrop ${{ steps.version.outputs.version }}
        body: |
          ## DevDrop ${{ steps.version.outputs.version }}

          Automated release from commit ${{ github.sha }}

          ### Installation

          **Quick install (Linux/macOS):**
          ```bash
          curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
          ```

          **Manual download:**
          - Linux (x64): `devdrop-linux-amd64`
          - Linux (ARM64): `devdrop-linux-arm64`
          - macOS (Intel): `devdrop-darwin-amd64`
          - macOS (Apple Silicon): `devdrop-darwin-arm64`
          - Windows (x64): `devdrop-windows-amd64.exe`

          ### Usage
          ```bash
          devdrop login    # Authenticate with DockerHub
          devdrop init     # Create and customize environment
          devdrop commit   # Save your customizations
          devdrop run      # Use environment in any project
          ```
        draft: false
        prerelease: false

    - name: Upload Linux amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./devdrop-linux-amd64
        asset_name: devdrop-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./devdrop-linux-arm64
        asset_name: devdrop-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload macOS amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./devdrop-darwin-amd64
        asset_name: devdrop-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload macOS arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./devdrop-darwin-arm64
        asset_name: devdrop-darwin-arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./devdrop-windows-amd64.exe
        asset_name: devdrop-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload checksums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./checksums.txt
        asset_name: checksums.txt
        asset_content_type: text/plain